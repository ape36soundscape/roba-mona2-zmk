name: Build ZMK Firmware (Debug Friendly)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install west and dependencies
        run: |
          set -e
          python3 -m pip install --upgrade pip
          pip3 install --user west pykwalify pyyaml
          echo "✅ pip/west installed" >> $GITHUB_STEP_SUMMARY

      # ---- 毎回クリーンに ZMK ワークスペースを作り直す（進捗をグルーピング表示）----
      - name: Initialize ZMK workspace
        run: |
          set -e
          echo "::group::Clean & west init"
          rm -rf app
          west init -m https://github.com/zmkfirmware/zmk.git app
          cd app
          echo "::endgroup::"

          echo "::group::west update"
          west update --narrow || (rm -rf .west && west init -m https://github.com/zmkfirmware/zmk.git . && west update --narrow)
          echo "::endgroup::"

          echo "::group::zephyr-export & requirements"
          west zephyr-export
          pip3 install --user -r zephyr/scripts/requirements.txt || true
          echo "::endgroup::"

          # 環境共有
          echo "ZEPHYR_BASE=$(pwd)/zephyr" >> $GITHUB_ENV
          echo "ZMK_APP=$(west list zmk -f '{path}')/app" >> $GITHUB_ENV

          # サマリ
          echo "✅ west init/update OK" >> $GITHUB_STEP_SUMMARY

      - name: Detect XIAO BLE board name (auto)
        run: |
          set -e
          echo "::group::Detect board"
          west boards | awk '{print $1}' > boards.txt || true
          FOUND=""
          for B in seeeduino_xiao_ble xiao_ble seeed_xiao_ble seeeduino_xiao_nrf52840; do
            if grep -Fx "$B" boards.txt >/dev/null 2>&1; then FOUND="$B"; break; fi
          done
          rm -f boards.txt
          [ -n "$FOUND" ] || FOUND="seeeduino_xiao_ble"
          echo "BOARD_NAME=$FOUND" | tee -a $GITHUB_ENV
          echo "::endgroup::"

          echo "🧭 Detected BOARD=$FOUND" >> $GITHUB_STEP_SUMMARY

      - name: Preflight check (paths & shields)
        run: |
          set -e
          echo "::group::Echo env"
          echo "ZEPHYR_BASE=$ZEPHYR_BASE"
          echo "ZMK_APP=$ZMK_APP"
          [ -d "$ZMK_APP" ] || (echo "ZMK_APP not found"; exit 1)
          echo "::endgroup::"

          echo "::group::List shields in repo (boards/shields)"
          find "${{ github.workspace }}/boards/shields" -maxdepth 2 -type f -name 'Kconfig.shield' -print || true
          echo "::endgroup::"

          echo "🔎 SHIELD_ROOT will be ${{ github.workspace }}" >> $GITHUB_STEP_SUMMARY

      - name: Build Left Firmware
        run: |
          set -e
          cd app
          echo "::group::west build (left)"
          west build -p always -b "${BOARD_NAME}" -d build/left "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DSHIELD_ROOT="${{ github.workspace }}" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          echo "::endgroup::"
          echo "✅ Left built" >> $GITHUB_STEP_SUMMARY

      - name: Build Right Firmware
        run: |
          set -e
          cd app
          echo "::group::west build (right)"
          west build -p always -b "${BOARD_NAME}" -d build/right "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DSHIELD_ROOT="${{ github.workspace }}" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          echo "::endgroup::"
          echo "✅ Right built" >> $GITHUB_STEP_SUMMARY

      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            app/build/left/zephyr/zmk.uf2
            app/build/right/zephyr/zmk.uf2
