name: Build ZMK Firmware (roBa mona2 compatible)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      # 1Ô∏è‚É£ GitHub„É™„Éù„Ç∏„Éà„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Ç¢„Ç¶„Éà
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Python & west „Ç§„É≥„Çπ„Éà„Éº„É´
      - name: Setup Python and west
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: |
          python -m pip install --upgrade pip
          pip install west docopt pyyaml colorama packaging ruamel.yaml click

      # 3Ô∏è‚É£ checkout„ÅåÊÆã„Åôextraheader„ÇíÂâäÈô§ÔºàGitË™çË®ºÂïèÈ°åÂõûÈÅøÔºâ
      - name: Clear checkout auth headers
        run: |
          git config --local  --unset-all http.https://github.com/.extraheader || true
          git config --global --unset-all http.https://github.com/.extraheader || true
          git config --system --unset-all http.https://github.com/.extraheader || true
          echo "‚úî extraheader cleared"

      # 4Ô∏è‚É£ ZMK„ÉØ„Éº„ÇØ„Çπ„Éö„Éº„Çπ‰ΩúÊàêÔºàRUNNER_TEMP‰ΩøÁî®„ÅßÂÆâÂÖ®Ôºâ
      - name: Initialize ZMK workspace
        run: |
          set -euo pipefail
          ZMK_WS="${RUNNER_TEMP}/zmk-ws"
          rm -rf "$ZMK_WS" || true
          mkdir -p "$ZMK_WS"
          cd "$ZMK_WS"

          echo "üì¶ Initializing ZMK workspace..."
          west init -m https://github.com/zmkfirmware/zmk-config.git .
          west update
          west zephyr-export

          echo "ZEPHYR_BASE=$(pwd)/zephyr" >> $GITHUB_ENV
          echo "ZMK_APP=$(pwd)/zmk/app" >> $GITHUB_ENV
          echo "ZMK_WS=$ZMK_WS" >> $GITHUB_ENV
          echo "‚úî ZMK workspace ready"

      # 5Ô∏è‚É£ BoardË®≠ÂÆöÔºàXIAO BLEÔºâ
      - name: Detect board
        run: |
          echo "BOARD_NAME=seeeduino_xiao_ble" >> $GITHUB_ENV
          echo "Detected BOARD_NAME=seeeduino_xiao_ble"

      # 6Ô∏è‚É£ ZMK_CONFIG „Å® Shield „Éë„Çπ„ÅÆÊåáÂÆö
      - name: Configure ZMK paths
        run: |
          set -euo pipefail
          if [ -d "${GITHUB_WORKSPACE}/config" ]; then
            ZMK_CONFIG_PATH="${GITHUB_WORKSPACE}/config"
          else
            ZMK_CONFIG_PATH="${GITHUB_WORKSPACE}"
          fi
          echo "ZMK_CONFIG=${ZMK_CONFIG_PATH}" >> $GITHUB_ENV

          if [ -d "${ZMK_CONFIG_PATH}/boards/shields" ]; then
            echo "USER_SHIELD_DIR=${ZMK_CONFIG_PATH}/boards/shields" >> $GITHUB_ENV
          elif [ -d "${GITHUB_WORKSPACE}/boards/shields" ]; then
            echo "USER_SHIELD_DIR=${GITHUB_WORKSPACE}/boards/shields" >> $GITHUB_ENV
          fi

      # 7Ô∏è‚É£ Áí∞Â¢É„ÅÆ‰∫ãÂâç„ÉÅ„Çß„ÉÉ„ÇØ
      - name: Preflight check
        run: |
          cmake --version
          west --version
          echo "ZEPHYR_BASE=${ZEPHYR_BASE}"
          echo "ZMK_APP=${ZMK_APP}"
          echo "ZMK_CONFIG=${ZMK_CONFIG}"
          echo "BOARD_NAME=${BOARD_NAME}"
          echo "USER_SHIELD_DIR=${USER_SHIELD_DIR:-none}"

      # 8Ô∏è‚É£ Â∑¶Êâã„Éì„É´„Éâ
      - name: Build Left Firmware
        working-directory: ${{ env.ZMK_WS }}
        run: |
          set -euo pipefail
          EXTRA_OPTS=""
          [ -n "${USER_SHIELD_DIR:-}" ] && EXTRA_OPTS="-DUSER_SHIELD_DIR=${USER_SHIELD_DIR}"
          west build -p always -b "${BOARD_NAME}" -d build/left "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${ZMK_CONFIG}" \
            ${EXTRA_OPTS} \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr

      # 9Ô∏è‚É£ Âè≥Êâã„Éì„É´„Éâ
      - name: Build Right Firmware
        working-directory: ${{ env.ZMK_WS }}
        run: |
          set -euo pipefail
          EXTRA_OPTS=""
          [ -n "${USER_SHIELD_DIR:-}" ] && EXTRA_OPTS="-DUSER_SHIELD_DIR=${USER_SHIELD_DIR}"
          west build -p always -b "${BOARD_NAME}" -d build/right "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${ZMK_CONFIG}" \
            ${EXTRA_OPTS} \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr

      # üîü ÊàêÊûúÁâ©„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÔºàUF2‰∏°ÊâãÂàÜÔºâ
      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            ${{ env.ZMK_WS }}/build/left/zephyr/*.uf2
            ${{ env.ZMK_WS }}/build/right/zephyr/*.uf2
