name: Build ZMK Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ZMK Firmware

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (west / Zephyr / GNU ARM)
        run: |
          sudo apt update
          sudo apt install -y \
            python3-pip ninja-build gperf dfu-util device-tree-compiler wget \
            python3-dev python3-setuptools python3-wheel xz-utils file \
            libncurses-dev libffi-dev libssl-dev ccache git cmake \
            gcc-arm-none-eabi libnewlib-arm-none-eabi
          pip3 install west

      - name: Prepare west workspace (local manifest)
        run: |
          rm -rf .west zephyr modules zmk build
          west init -l .
          west update
          west list

      - name: Resolve ZMK and Zephyr paths (with fallback)
        run: |
          set -e
          ZMK_DIR="$(west list -f '{path}' zmk || true)"
          ZEPHYR_DIR="$(west list -f '{path}' zephyr || true)"
          echo "west reported ZMK_DIR='${ZMK_DIR}' ZEPHYR_DIR='${ZEPHYR_DIR}'"

          # ---- zmk/app が無ければフォールバック clone ----
          if [ -z "${ZMK_DIR}" ] || [ ! -d "${ZMK_DIR}/app" ]; then
            echo "zmk/app not found via west. Forcing clean clone..."
            rm -rf zmk
            git clone --depth 1 https://github.com/zmkfirmware/zmk.git zmk
            ZMK_DIR="${PWD}/zmk"
          fi

          # ---- Zephyr が見つからない場合は失敗（場所が必須）----
          if [ -z "${ZEPHYR_DIR}" ] || [ ! -f "${ZEPHYR_DIR}/cmake/app/boilerplate.cmake" ]; then
            echo "Zephyr not found in west workspace."; west list || true; exit 1
          fi

          # 後続ステップへ渡す
          echo "ZMK_APP=${ZMK_DIR}/app"    >> $GITHUB_ENV
          echo "ZEPHYR_BASE=${ZEPHYR_DIR}" >> $GITHUB_ENV
          echo "Resolved ZMK_APP=${ZMK_DIR}/app"
          echo "Resolved ZEPHYR_BASE=${ZEPHYR_DIR}"

      - name: Build Left Firmware
        run: |
          west build -p always -b seeeduino_xiao_nrf52840 -d build/left "$ZMK_APP" -- \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUEARMEMB_TOOLCHAIN_PATH=/usr \
            -DZEPHYR_BASE="${ZEPHYR_BASE}"

      - name: Build Right Firmware
        run: |
          west build -p always -b seeeduino_xiao_nrf52840 -d build/right "$ZMK_APP" -- \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUEARMEMB_TOOLCHAIN_PATH=/usr \
            -DZEPHYR_BASE="${ZEPHYR_BASE}"

      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            build/left/zephyr/zmk.uf2
            build/right/zephyr/zmk.uf2
