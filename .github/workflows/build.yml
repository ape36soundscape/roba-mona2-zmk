name: Build ZMK Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install west and dependencies
        run: |
          pip install --upgrade pip
          pip install west pyelftools

      - name: Initialize ZMK workspace
        run: |
          git clone --depth=1 https://github.com/zmkfirmware/zmk.git zmk
          cd zmk
          west init -l app || true
          west update
          west zephyr-export
          pip install -r zephyr/scripts/requirements.txt || true
          cd ..

      - name: Detect XIAO BLE board name (auto)
        id: detect_board
        run: |
          set -e
          CANDIDATES="seeeduino_xiao_ble seeeduino_xiao_ble_sense nrf52840_dongle"
          FOUND=""
          touch boards.txt
          cd zmk
          west boards | awk '{print $1}' > ../boards.txt || true
          cd ..
          for B in $CANDIDATES; do
            if grep -Fx "$B" boards.txt >/dev/null 2>&1; then FOUND="$B"; break; fi
          done
          rm -f boards.txt
          if [ -z "$FOUND" ]; then
            echo "⚠️ No matching board found, defaulting to seeeduino_xiao_ble"
            FOUND="seeeduino_xiao_ble"
          fi
          echo "Detected BOARD_NAME=$FOUND"
          echo "BOARD_NAME=$FOUND" >> $GITHUB_ENV

      - name: Build Left Firmware
        run: |
          cd zmk
          west build -p always -b "${BOARD_NAME}" -d build/left app \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DZEHPYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          cd ..

      - name: Build Right Firmware
        run: |
          cd zmk
          west build -p always -b "${BOARD_NAME}" -d build/right app \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DZEHPYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          cd ..

      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            zmk/build/left/zephyr/zmk.uf2
            zmk/build/right/zephyr/zmk.uf2
