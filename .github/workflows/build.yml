name: Build ZMK Firmware (Guaranteed Local Init)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install west and dependencies
        run: |
          set -e
          python3 -m pip install --upgrade pip
          pip3 install --user west pykwalify pyyaml docopt colorama ruamel.yaml python-dateutil
          echo "‚úÖ Installed west and deps"

      # ---- west init „ÇíÁ¢∫ÂÆü„Å´ÈÄö„Åô„É≠„Éº„Ç´„É´„É¢„Éº„Éâ ----
      - name: Initialize ZMK workspace (Local Fallback)
        run: |
          set -e
          echo "::group::Clone ZMK locally"
          rm -rf app zmk || true
          git clone --depth=1 https://github.com/zmkfirmware/zmk.git zmk
          echo "::endgroup::"

          echo "::group::Initialize west locally"
          # „É≠„Éº„Ç´„É´ manifest „É¢„Éº„Éâ„ÅßÂàùÊúüÂåñ
          west init -l zmk
          west update
          echo "::endgroup::"

          echo "::group::Export env"
          west zephyr-export
          pip3 install --user -r zmk/zephyr/scripts/requirements.txt || true
          echo "ZEPHYR_BASE=$(pwd)/zmk/zephyr" >> $GITHUB_ENV
          echo "ZMK_APP=$(pwd)/zmk/app" >> $GITHUB_ENV
          echo "::endgroup::"
          echo "‚úÖ Local west init success"

      - name: Detect XIAO BLE board name (auto)
        run: |
          set -e
          west boards | awk '{print $1}' > boards.txt || true
          FOUND=""
          for B in seeeduino_xiao_ble xiao_ble seeed_xiao_ble seeeduino_xiao_nrf52840; do
            if grep -Fx "$B" boards.txt >/dev/null 2>&1; then FOUND="$B"; break; fi
          done
          rm -f boards.txt
          [ -n "$FOUND" ] || FOUND="seeeduino_xiao_ble"
          echo "BOARD_NAME=$FOUND" | tee -a $GITHUB_ENV
          echo "üß≠ Detected BOARD=$FOUND"

      - name: Preflight check
        run: |
          echo "ZEPHYR_BASE=$ZEPHYR_BASE"
          echo "ZMK_APP=$ZMK_APP"
          [ -d "$ZEPHYR_BASE" ] || (echo "‚ùå ZEPHYR_BASE missing"; exit 1)
          [ -d "$ZMK_APP" ] || (echo "‚ùå ZMK_APP missing"; exit 1)
          echo "‚úÖ Preflight OK"

      - name: Build Left Firmware
        run: |
          set -e
          cd zmk
          west build -p always -b "${BOARD_NAME}" -d build/left app \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DSHIELD_ROOT="${{ github.workspace }}" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          echo "‚úÖ Left build OK"

      - name: Build Right Firmware
        run: |
          set -e
          cd zmk
          west build -p always -b "${BOARD_NAME}" -d build/right app \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${{ github.workspace }}/config" \
            -DSHIELD_ROOT="${{ github.workspace }}" \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr
          echo "‚úÖ Right build OK"

      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            zmk/build/left/zephyr/zmk.uf2
            zmk/build/right/zephyr/zmk.uf2
