name: Build ZMK Firmware (Full Safe Build)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install west and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install west docopt pyyaml colorama packaging ruamel.yaml click

      # ← これが肝。checkout の extraheader を完全に外す
      - name: Clear checkout auth header (allow public clones)
        run: |
          git config --local  --unset-all http.https://github.com/.extraheader || true
          git config --global --unset-all http.https://github.com/.extraheader || true
          git config --system --unset-all http.https://github.com/.extraheader || true
          echo "After cleanup:"
          (git config -l | grep -i extraheader) || echo "no extraheader"

      # リポジトリの外側（RUNNER_TEMP）に ZMK ワークスペースを作る
      - name: Initialize ZMK workspace (runner temp)
        run: |
          set -euo pipefail
          ZMK_WS="${RUNNER_TEMP}/zmk-ws"
          rm -rf "$ZMK_WS" || true
          mkdir -p "$ZMK_WS"
          echo "ZMK_WS=$ZMK_WS" >> $GITHUB_ENV

          cd "$ZMK_WS"
          west init -m https://github.com/zmkfirmware/zmk-config.git .
          west update
          west zephyr-export

          echo "ZEPHYR_BASE=$(pwd)/zephyr" >> $GITHUB_ENV
          echo "ZMK_APP=$(pwd)/zmk/app"    >> $GITHUB_ENV

      - name: Detect XIAO BLE board name (auto)
        run: |
          echo "BOARD_NAME=seeeduino_xiao_ble" >> $GITHUB_ENV
          echo "Detected BOARD_NAME=seeeduino_xiao_ble"

      - name: Resolve ZMK_CONFIG and USER_SHIELD_DIR
        run: |
          set -euo pipefail
          if [ -d "${GITHUB_WORKSPACE}/config" ]; then
            ZMK_CONFIG_PATH="${GITHUB_WORKSPACE}/config"
          else
            ZMK_CONFIG_PATH="${GITHUB_WORKSPACE}"
          fi
          echo "ZMK_CONFIG=${ZMK_CONFIG_PATH}" >> $GITHUB_ENV

          if [ -d "${ZMK_CONFIG_PATH}/boards/shields" ]; then
            echo "USER_SHIELD_DIR=${ZMK_CONFIG_PATH}/boards/shields" >> $GITHUB_ENV
          elif [ -d "${GITHUB_WORKSPACE}/boards/shields" ]; then
            echo "USER_SHIELD_DIR=${GITHUB_WORKSPACE}/boards/shields" >> $GITHUB_ENV
          fi

      - name: Preflight check
        run: |
          cmake --version
          west --version
          python --version
          echo "ZMK_WS=${ZMK_WS}"
          echo "ZEPHYR_BASE=${ZEPHYR_BASE}"
          echo "ZMK_APP=${ZMK_APP}"
          echo "BOARD_NAME=${BOARD_NAME}"
          echo "ZMK_CONFIG=${ZMK_CONFIG}"
          [ -n "${USER_SHIELD_DIR:-}" ] && echo "USER_SHIELD_DIR=${USER_SHIELD_DIR}" || true

      - name: Build Left Firmware
        working-directory: ${{ env.ZMK_WS }}
        run: |
          set -euo pipefail
          EXTRA_OPTS=""
          [ -n "${USER_SHIELD_DIR:-}" ] && EXTRA_OPTS="-DUSER_SHIELD_DIR=${USER_SHIELD_DIR}"
          west build -p always -b "${BOARD_NAME}" -d build/left "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_left \
            -DZMK_CONFIG="${ZMK_CONFIG}" \
            ${EXTRA_OPTS} \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr

      - name: Build Right Firmware
        working-directory: ${{ env.ZMK_WS }}
        run: |
          set -euo pipefail
          EXTRA_OPTS=""
          [ -n "${USER_SHIELD_DIR:-}" ] && EXTRA_OPTS="-DUSER_SHIELD_DIR=${USER_SHIELD_DIR}"
          west build -p always -b "${BOARD_NAME}" -d build/right "$ZMK_APP" \
            -DSHIELD=roba_compat_mona_right \
            -DZMK_CONFIG="${ZMK_CONFIG}" \
            ${EXTRA_OPTS} \
            -DZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb \
            -DGNUARMEMB_TOOLCHAIN_PATH=/usr

      - name: Upload UF2 Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zmk-uf2
          path: |
            ${{ env.ZMK_WS }}/build/left/zephyr/*.uf2
            ${{ env.ZMK_WS }}/build/right/zephyr/*.uf2
